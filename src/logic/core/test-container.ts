import { GameContainer } from './game/GameContainer';

// –ü—Ä–æ—Å—Ç–∏–π —Ç–µ—Å—Ç –¥–ª—è GameContainer
export function testGameContainer(): void {
  console.log('üß™ Testing GameContainer...');
  
  const container = GameContainer.getInstance();
  
  // –¢–µ—Å—Ç 1: –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —Ç–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–µ—Ä–≤—ñ—Å—É
  container.register('testService', () => ({ name: 'Test Service', value: 42 }));
  
  const testService = container.get('testService') as { name: string; value: number };
  console.log('‚úÖ Test 1 passed:', testService.name === 'Test Service' && testService.value === 42);
  
  // –¢–µ—Å—Ç 2: Singleton pattern
  const container2 = GameContainer.getInstance();
  const testService2 = container2.get('testService') as { name: string; value: number };
  console.log('‚úÖ Test 2 passed:', testService === testService2);
  
  // –¢–µ—Å—Ç 3: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ —Å–µ—Ä–≤—ñ—Å—É
  console.log('‚úÖ Test 3 passed:', container.has('testService') === true);
  console.log('‚úÖ Test 4 passed:', container.has('nonExistentService') === false);
  
  // –¢–µ—Å—Ç 4: –°–ø–∏—Å–æ–∫ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏—Ö —Å–µ—Ä–≤—ñ—Å—ñ–≤
  const services = container.getRegisteredServices();
  console.log('‚úÖ Test 5 passed:', services.includes('testService'));
  
  console.log('üéâ All GameContainer tests passed!');
  console.log('Registered services:', services);
}
